import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

public class Race {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);
        String[] members = scanner.nextLine().split(", ");
        
        Map<String, Integer> runners = new TreeMap<>();
        Arrays.stream(members).forEach(e -> runners.put(e, 0));
        
        String userInput = scanner.nextLine();
        Pattern patternForNames = Pattern.compile("[A-Za-z]");
        Pattern patternForDistance = Pattern.compile("\\d");


        while (!userInput.equals("end of race")) {
            Matcher matcher = patternForNames.matcher(userInput);
            StringBuilder name = new StringBuilder();
            
            while (matcher.find()) {
                name.append(matcher.group());
            }
            if (runners.containsKey(name.toString())) {
                matcher = patternForDistance.matcher(userInput);
                
                StringBuilder distance = new StringBuilder();
                int totalDistance = runners.get(name.toString());

                while (matcher.find()) {
                    distance.append(matcher.group());
                    totalDistance += Integer.parseInt(matcher.group());
                }
                runners.put(name.toString(), totalDistance);
            }


            userInput = scanner.nextLine();
        }

        List<String> winners = runners.entrySet()
                .stream()
                .sorted((a, b) -> b.getValue() - a.getValue())
                .limit(3)
                .map(Map.Entry::getKey)
                .collect(Collectors.toList());


        int count = 1;
        for (String w : winners) {
            switch (count++) {
                case 1:
                    System.out.println("1st place: " + w);
                    break;
                case 2:
                    System.out.println("2nd place: " + w);
                    break;
                case 3:
                    System.out.println("3rd place: " + w);

            }
        }
    }
}
