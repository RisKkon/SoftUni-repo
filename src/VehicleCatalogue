import java.util.*;
import java.util.stream.Collectors;


public class VehicleCatalogue {

    public static class Vehicle {

        String type;
        String model;
        String color;
        int horsepower;

        public Vehicle(String type, String model, String color, int horsepower) {
            this.type = type;
            this.model = model;
            this.color = color;
            this.horsepower = horsepower;
        }

        public String toString() {

            return String.format("Type: %s%n" +
                            "Model: %s%n" +
                            "Color: %s%n" +
                            "Horsepower: %d",
                    getType().toUpperCase().charAt(0) + getType().substring(1),
                    getModel(), getColor(), getHorsepower());
        }

        public String getType() {
            return type;
        }

        public String getModel() {
            return model;
        }

        public String getColor() {
            return color;
        }

        public int getHorsepower() {
            return horsepower;
        }
    }

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        String userInput = scanner.nextLine();
        List<Vehicle> vehicles = new ArrayList<>();

        while(!userInput.equals("End")) {

            String[] data = userInput.split("\\s");

            Vehicle vehicle = new Vehicle(data[0], data[1], data[2], Integer.parseInt(data[3]));
            vehicles.add(vehicle);

            userInput = scanner.nextLine();
        }


        userInput = scanner.nextLine();

        while(!userInput.equals("Close the Catalogue")) {

            String model = userInput;
            vehicles.stream().filter(vehicle -> vehicle.getModel().equals(model))
                    .forEach(vehicle -> System.out.println(vehicle.toString()));
            userInput = scanner.nextLine();
        }
        List<Vehicle> cars = vehicles.stream().filter(vehicle -> vehicle.getType()
                .equals("car")).collect(Collectors.toList());
        List<Vehicle> trucks = vehicles.stream().filter(vehicle -> vehicle.getType()
                .equals("truck")).collect(Collectors.toList());
        
        System.out.printf("Cars have average horsepower of: %.2f.%n", getAverageHorsepower(cars));
        System.out.printf("Trucks have average horsepower of: %.2f.", getAverageHorsepower(trucks));
    }

    public static double getAverageHorsepower(List<Vehicle> vehicles) {

        if(vehicles.size() == 0) {
            return 0;
        }
        return vehicles.stream().mapToDouble(Vehicle::getHorsepower).sum() / vehicles.size();
    }
}
